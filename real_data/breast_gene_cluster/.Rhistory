lines(
x = n_vals, y = table[3, -1],
lty = 4, col = cbPalette[7]
)
points(
x = n_vals, y = table[4, -1],
pch = 19, col = "#000000")
lines(
x = n_vals, y = table[4, -1],
lty = 1, col = "#000000"
)
plot.new()
legend(
"center", legend = , c(method_names, "Target level 0.05"), col = c(cbPalette[c(4, 6, 7)], "#000000", "red"),
lty = c(2, 3, 4, 1, 3), pch = c(0, 8, 10, 19, 19), cex = 1)
mtext(
text = "Rejection Rate Under Null: Gene Expression Data",
side = 3, outer = TRUE, cex = 2, line = -2.5)
points(
x = n_vals, y = table[2, -1],
pch = 8, col = cbPalette[6])
lines(
x = n_vals, y = table[2, -1],
lty = 3, col = cbPalette[6]
)
method_names <- c(
"Cai & Zhang (2016)",
"Zheng et al. (2019) sum",
"Zheng et al. (2019) max",
"Permutation Test")
n_vals <- seq(50, 600, by = 50)
par(cex.main = 1.5, cex.lab = 1)
layout(mat = matrix(c(1, 2), ncol = 2), widths = c(1,0.5))
table <- read.csv(paste0("42_Results_average.csv"))
table <- read.csv(paste0("42_Results_average_400.csv"))
plot(
x = n_vals, y = table[1, -1],
ylim = c(0,1), xlim = c(0, 600),
main = "",
pch = 0, col = cbPalette[4],
cex.main = 2, cex.lab = 1.5,
xlab = "Total Sample Size (N)",
ylab = "Proportion of Rejection")
lines(
x = n_vals, y = table[1, -1],
lty = 2, col = cbPalette[4])
abline(h = 0.05, col = "red", lty = 3)
points(
x = n_vals, y = rep(0.05, length(n_vals)),
pch =".", col = "red")
points(
x = n_vals, y = table[2, -1],
pch = 8, col = cbPalette[6])
lines(
x = n_vals, y = table[2, -1],
lty = 3, col = cbPalette[6]
)
points(
x = n_vals, y = table[3, -1],
pch = 10, col = cbPalette[7])
lines(
x = n_vals, y = table[3, -1],
lty = 4, col = cbPalette[7]
)
points(
x = n_vals, y = table[4, -1],
pch = 19, col = "#000000")
lines(
x = n_vals, y = table[4, -1],
lty = 1, col = "#000000"
)
plot.new()
legend(
"center", legend = , c(method_names, "Target level 0.05"), col = c(cbPalette[c(4, 6, 7)], "#000000", "red"),
lty = c(2, 3, 4, 1, 3), pch = c(0, 8, 10, 19, 19), cex = 1)
mtext(
text = "Rejection Rate Under Null: Gene Expression Data",
side = 3, outer = TRUE, cex = 2, line = -2.5)
ROOT_PATH <- "C:/Users/joses/Dropbox/hdboot/PaperRevision/Code_Revision/simulation_code/"
init <- TRUE
library(tidyverse)
library(magrittr)
library(gridExtra)
rm(list = ls())
ROOT_PATH <- "C:/Users/joses/Dropbox/hdboot/PaperRevision/Code_Revision/simulation_code/"
load(paste0(ROOT_PATH, "results/2AddSims_full/results_2AddSims.RData"))
ROOT_PATH <- "C:/Users/joses/Dropbox/hdboot/PaperRevision/Code_Revision/simulation_code/"
ls()
dim(output_df)
colnames(output_df)
method_names <- c(
"Perm_cor3_Fro",
"Perm_cor2_Fro",
"Perm_cor1_Fro"
)
method_names_clean <-  c(
"Perm-Cor: Direct Norm",
"Perm-Cor: Stabilized",
"Perm-Cor: Pseudo-Stab."
)
output_cor <- output_df %>%
as_tibble() %>%
mutate(n_col = n1_col, .before = n1_col) %>%
select(
-ends_with("Nuc"), -ends_with("Ope"), -ends_with("max"),
-"n1_col", -"n2_col",
-max_sigma, -l1_sigma, -F_sigma, -l0_sigma,
-max_rho, -l1_rho, -F_rho, -l0_rho) %>%
pivot_longer(
cols          = ends_with("Fro"),
names_to      = "method",
values_to     = "R_Rate") %>%
filter(
method %in% method_names,
p_col >= 60) %>%
pivot_wider(
names_from = "sp_col",
names_prefix = "rejRate_sp",
values_from = R_Rate) %>%
mutate(
Size = rejRate_sp0,
"Power: Dense Alt." = rejRate_sp2,
"Power: Sparse Alt." = rejRate_sp1,
"Power Gap: Dense Alt." = rejRate_sp2 - rejRate_sp0,
"Power Gap: Sparse Alt." = rejRate_sp1 - rejRate_sp0)
cbPalette <- c("#999999", "#E69F00", "#56B4E9",
"#009E73", "#F0E442", "#0072B2",
"#D55E00", "#CC79A7")
for (.model_ind in 1:5) {
model_ind <- c(1,2,3,5,6)[.model_ind]
file_name1 <- paste0(
ROOT_PATH, "results/2AddSims_full/FixedNorm_TransfComparison/",
"PowerGapCor_model", .model_ind, ".pdf")
pdf(file_name1, width = 9, height = 5)
output_cor_proc <- output_cor %>%
select(-rejRate_sp0, -rejRate_sp1, -rejRate_sp2, -"Power: Dense Alt.", -"Power: Sparse Alt.") %>%
mutate(n_name = factor(paste0("n = ", n_col), levels = paste0("n = ", c(40, 80, 160, 320)))) %>%
mutate(method = str_replace_all(method, setNames(method_names_clean, method_names))) %>%
mutate(method = factor(method, levels = method_names_clean)) %>%
filter(model_col == model_ind) %>%
pivot_longer(
cols = c(Size, "Power Gap: Dense Alt.", "Power Gap: Sparse Alt."),
names_to = "measure_type",
values_to = "measure_val")
p1 <- output_cor_proc %>%
filter(measure_type == "Size") %>%
ggplot(aes(x = p_col, y = measure_val)) +
geom_line(aes(col = method, linetype = method, linewidth = method), alpha = 1) +
scale_linetype_manual(values = c(2, 3, 1)) +
scale_discrete_manual("linewidth", values = c(0.75, 0.75, 1)) +
geom_point(aes(col = method, shape = method), size = 2.2, alpha = 1) +
scale_shape_manual(values = c(5, 13, 19)) +
scale_color_manual(values=c("gray50", "gray30", "black")) +
ylab(bquote(H[0]~ "Rejection Rate")) +
xlab("p") +
ylim(-0.1, 1) +
theme(
legend.position = "none",
strip.text.y = element_blank(),
plot.margin = margin(r = 10)) +
facet_grid(rows = vars(n_name), cols = vars(measure_type))
p2 <- output_cor_proc %>%
filter(measure_type == "Power Gap: Dense Alt.") %>%
ggplot(aes(x = p_col, y = measure_val)) +
geom_line(aes(col = method, linetype = method, linewidth = method), alpha = 1) +
scale_linetype_manual(values = c(3, 4, 1)) +
scale_discrete_manual("linewidth", values = c(0.75, 0.75, 1)) +
geom_point(aes(col = method, shape = method), size = 2.2, alpha = 1) +
scale_shape_manual(values = c(5, 13, 19)) +
scale_color_manual(values=c("gray50", "gray30", "black")) +
ylab(bquote(H[0]~ "Power-Size Rejection Rate Gap")) +
xlab("p") +
ylim(-0.1, 1) +
theme(
legend.position = "none",
#axis.ticks.y = element_blank(),
#axis.text.y = element_blank(),
strip.text.y = element_blank(),
plot.margin = margin(r = 10)) +
facet_grid(rows = vars(n_name), cols = vars(measure_type))
p3 <- output_cor_proc %>%
filter(measure_type == "Power Gap: Sparse Alt.") %>%
ggplot(aes(x = p_col, y = measure_val)) +
geom_line(aes(col = method, linetype = method, linewidth = method), alpha = 1) +
scale_linetype_manual(values = c(3, 4, 1)) +
scale_discrete_manual("linewidth", values = c(0.75, 0.75, 1)) +
geom_point(aes(col = method, shape = method), size = 2.2, alpha = 1) +
scale_shape_manual(values = c(5, 13, 19)) +
scale_color_manual(values=c("gray50", "gray30", "black")) +
#ylab(bquote(H[0]~ "Power-Size Rejection Rate Gap")) +
xlab("p") +
ylim(-0.1, 1) +
theme(
axis.title.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
plot.margin = margin(r = 10),
legend.title = element_blank()) +
facet_grid(rows = vars(n_name), cols = vars(measure_type))
p_merged <- grid.arrange(
p1, p2, p3,
widths = c(2.2, 2.2, 3.6),
layout_matrix = rbind(c(1, 2, 3)))
print(p_merged)
dev.off()
file_name2 <- paste0(
ROOT_PATH, "results/2AddSims_full/FixedNorm_TransfComparison/",
"PowerCor_model", .model_ind, ".pdf")
pdf(file_name2, width = 9, height = 5)
p1 <- output_cor %>%
select(-rejRate_sp0, -rejRate_sp1, -rejRate_sp2, -"Power Gap: Dense Alt.", -"Power Gap: Sparse Alt.") %>%
mutate(n_name = factor(paste0("n = ", n_col), levels = paste0("n = ", c(40,80,160,320)))) %>%
mutate(method = str_replace_all(method, setNames(method_names_clean, method_names))) %>%
mutate(method = factor(method, levels = method_names_clean)) %>%
filter(model_col == model_ind) %>%
pivot_longer(
cols = c(Size, "Power: Dense Alt.", "Power: Sparse Alt."),
names_to = "measure_type",
values_to = "measure_val") %>%
mutate(measure_type = factor(measure_type, levels = c("Size", "Power: Dense Alt.", "Power: Sparse Alt."))) %>%
ggplot(aes(x = p_col, y = measure_val)) +
geom_line(aes(col = method, linetype = method, linewidth = method), alpha = 1) +
scale_linetype_manual(values = c(3, 4, 1)) +
scale_discrete_manual("linewidth", values = c(0.75, 0.75, 1)) +
geom_point(aes(col = method, shape = method), size = 2.2, alpha = 1) +
scale_shape_manual(values = c(5, 13, 19)) +
scale_color_manual(values = c("gray50", "gray30", "black")) +
facet_grid(rows = vars(n_name), cols = vars(measure_type)) +
ylab("Rejection Rate") +
xlab("p") +
theme(
panel.spacing = unit(0.75, "lines"),
legend.title = element_blank())
print(p1)
dev.off()
}
library(tidyverse)
library(magrittr)
library(gridExtra)
rm(list = ls())
ROOT_PATH <- "C:/Users/joses/Dropbox/hdboot/PaperRevision/Code_Revision/simulation_code/"
load(paste0(ROOT_PATH, "results/2AddSims_full/results_2AddSims.RData"))
ROOT_PATH <- "C:/Users/joses/Dropbox/hdboot/PaperRevision/Code_Revision/simulation_code/"
ls()
dim(output_df)
colnames(output_df)
method_names <- c(
"Perm_cor1_Ope",
"Perm_cor1_Max",
"Perm_cor1_Nuc",
"Perm_cor1_Fro"
)
method_names_clean <-  c(
"Operator (B = 200)",
"Entry-Max (B = 200)",
"Nuclear (B = 200)",
"Frobenius (B = 200)"
)
output_cor <- output_df %>%
as_tibble() %>%
mutate(n_col = n1_col, .before = n1_col) %>%
select(
-contains("cor2"), -contains("cor3"),
-"n1_col", -"n2_col",
-max_sigma, -l1_sigma, -F_sigma, -l0_sigma,
-max_rho, -l1_rho, -F_rho, -l0_rho) %>%
pivot_longer(
cols          = contains("cor1"),
names_to      = "method",
values_to     = "R_Rate") %>%
filter(
method %in% method_names,
p_col >= 60) %>%
pivot_wider(
names_from = "sp_col",
names_prefix = "rejRate_sp",
values_from = R_Rate) %>%
mutate(
Size = rejRate_sp0,
"Power: Dense Alt." = rejRate_sp2,
"Power: Sparse Alt." = rejRate_sp1,
"Power Gap: Dense Alt." = rejRate_sp2 - rejRate_sp0,
"Power Gap: Sparse Alt." = rejRate_sp1 - rejRate_sp0)
cbPalette <- c("#999999", "#E69F00", "#56B4E9",
"#009E73", "#F0E442", "#0072B2",
"#D55E00", "#CC79A7")
for (.model_ind in 1:5) {
model_ind <- c(1,2,3,5,6)[.model_ind]
file_name1 <- paste0(
ROOT_PATH, "results/2AddSims_full/FixedTransf_NormComparison/",
"PowerGapCor_model", .model_ind, ".pdf")
pdf(file_name1, width = 9, height = 5)
output_cor_proc <- output_cor %>%
select(-rejRate_sp0, -rejRate_sp1, -rejRate_sp2, -"Power: Dense Alt.", -"Power: Sparse Alt.") %>%
mutate(n_name = factor(paste0("n = ", n_col), levels = paste0("n = ", c(40, 80, 160, 320)))) %>%
mutate(method = str_replace_all(method, setNames(method_names_clean, method_names))) %>%
mutate(method = factor(method, levels = method_names_clean)) %>%
filter(model_col == model_ind) %>%
pivot_longer(
cols = c(Size, "Power Gap: Dense Alt.", "Power Gap: Sparse Alt."),
names_to = "measure_type",
values_to = "measure_val")
p1 <- output_cor_proc %>%
filter(measure_type == "Size") %>%
ggplot(aes(x = p_col, y = measure_val)) +
geom_line(aes(col = method, linetype = method, linewidth = method), alpha = 1) +
scale_linetype_manual(values = c(2, 3, 4, 1)) +
scale_discrete_manual("linewidth", values = c(0.75, 0.75, 0.75, 1)) +
geom_point(aes(col = method, shape = method), size = 2.2, alpha = 1) +
scale_shape_manual(values = c(2, 5, 13, 19)) +
scale_color_manual(values=c(cbPalette[c(2, 4, 8)], "#000000")) +
ylab(bquote(H[0]~ "Rejection Rate")) +
xlab("p") +
ylim(-0.1, 1) +
theme(
legend.position = "none",
strip.text.y = element_blank(),
plot.margin = margin(r = 10)) +
facet_grid(rows = vars(n_name), cols = vars(measure_type))
p2 <- output_cor_proc %>%
filter(measure_type == "Power Gap: Dense Alt.") %>%
ggplot(aes(x = p_col, y = measure_val)) +
geom_line(aes(col = method, linetype = method, linewidth = method), alpha = 1) +
scale_linetype_manual(values = c(2, 3, 4, 1)) +
scale_discrete_manual("linewidth", values = c(0.75, 0.75, 0.75, 1)) +
geom_point(aes(col = method, shape = method), size = 2.2, alpha = 1) +
scale_shape_manual(values = c(2, 5, 13, 19)) +
scale_color_manual(values=c(cbPalette[c(2, 4, 8)], "#000000")) +
ylab(bquote(H[0]~ "Power-Size Rejection Rate Gap")) +
xlab("p") +
ylim(-0.1, 1) +
theme(
legend.position = "none",
#axis.ticks.y = element_blank(),
#axis.text.y = element_blank(),
strip.text.y = element_blank(),
plot.margin = margin(r = 10)) +
facet_grid(rows = vars(n_name), cols = vars(measure_type))
p3 <- output_cor_proc %>%
filter(measure_type == "Power Gap: Sparse Alt.") %>%
ggplot(aes(x = p_col, y = measure_val)) +
geom_line(aes(col = method, linetype = method, linewidth = method), alpha = 1) +
scale_linetype_manual(values = c(2, 3, 4, 1)) +
scale_discrete_manual("linewidth", values = c(0.75, 0.75, 0.75, 1)) +
geom_point(aes(col = method, shape = method), size = 2.2, alpha = 1) +
scale_shape_manual(values = c(2, 5, 13, 19)) +
scale_color_manual(values=c(cbPalette[c(2, 4, 8)], "#000000")) +
#ylab(bquote(H[0]~ "Power-Size Rejection Rate Gap")) +
xlab("p") +
ylim(-0.1, 1) +
theme(
axis.title.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
plot.margin = margin(r = 10),
legend.title = element_blank()) +
facet_grid(rows = vars(n_name), cols = vars(measure_type))
p_merged <- grid.arrange(
p1, p2, p3,
widths = c(2.2, 2.2, 3.6),
layout_matrix = rbind(c(1, 2, 3)))
print(p_merged)
dev.off()
file_name2 <- paste0(
ROOT_PATH, "results/2AddSims_full/FixedTransf_NormComparison/",
"PowerCor_model", .model_ind, ".pdf")
pdf(file_name2, width = 9, height = 5)
p1 <- output_cor %>%
select(-rejRate_sp0, -rejRate_sp1, -rejRate_sp2, -"Power Gap: Dense Alt.", -"Power Gap: Sparse Alt.") %>%
mutate(n_name = factor(paste0("n = ", n_col), levels = paste0("n = ", c(40,80,160,320)))) %>%
mutate(method = str_replace_all(method, setNames(method_names_clean, method_names))) %>%
mutate(method = factor(method, levels = method_names_clean)) %>%
filter(model_col == model_ind) %>%
pivot_longer(
cols = c(Size, "Power: Dense Alt.", "Power: Sparse Alt."),
names_to = "measure_type",
values_to = "measure_val") %>%
mutate(measure_type = factor(measure_type, levels = c("Size", "Power: Dense Alt.", "Power: Sparse Alt."))) %>%
ggplot(aes(x = p_col, y = measure_val)) +
geom_line(aes(col = method, linetype = method, linewidth = method), alpha = 1) +
scale_linetype_manual(values = c(2, 3, 4, 1)) +
scale_discrete_manual("linewidth", values = c(0.75, 0.75, 0.75, 1)) +
geom_point(aes(col = method, shape = method), size = 2.2, alpha = 1) +
scale_shape_manual(values = c(2, 5, 13, 19)) +
scale_color_manual(values = c(cbPalette[c(2, 4, 8)], "#000000")) +
facet_grid(rows = vars(n_name), cols = vars(measure_type)) +
ylab("Rejection Rate") +
xlab("p") +
theme(
panel.spacing = unit(0.75, "lines"),
legend.title = element_blank())
print(p1)
dev.off()
}
rm(list = ls())
## Colorblind friendly palette. Required to use these colors for assignments.
cbPalette <- c("#999999", "#E69F00", "#56B4E9",
"#009E73", "#F0E442", "#0072B2",
"#D55E00", "#CC79A7")
plot(1:8, col = cbPalette, pch = 19)
method_names <- c(
"Cai & Zhang (2016)",
"Zheng et al. (2019) sum",
"Zheng et al. (2019) max",
"Permutation Test")
n_vals <- seq(50, 600, by = 50)
par(cex.main = 1.5, cex.lab = 1)
layout(mat = matrix(c(1, 2), ncol = 2), widths = c(1,0.5))
# table <- read.csv(paste0("42_Results_average.csv"))
table <- read.csv(paste0("42_Results_average_400.csv"))
plot(
x = n_vals, y = table[1, -1],
ylim = c(0,1), xlim = c(0, 600),
main = "",
pch = 0, col = cbPalette[4],
cex.main = 2, cex.lab = 1.5,
xlab = "Total Sample Size (N)",
ylab = "Proportion of Rejection")
lines(
x = n_vals, y = table[1, -1],
lty = 2, col = cbPalette[4])
abline(h = 0.05, col = "red", lty = 3)
points(
x = n_vals, y = rep(0.05, length(n_vals)),
pch =".", col = "red")
points(
x = n_vals, y = table[2, -1],
pch = 8, col = cbPalette[6])
lines(
x = n_vals, y = table[2, -1],
lty = 3, col = cbPalette[6]
)
points(
x = n_vals, y = table[3, -1],
pch = 10, col = cbPalette[7])
lines(
x = n_vals, y = table[3, -1],
lty = 4, col = cbPalette[7]
)
points(
x = n_vals, y = table[4, -1],
pch = 19, col = "#000000")
lines(
x = n_vals, y = table[4, -1],
lty = 1, col = "#000000"
)
plot.new()
legend(
"center", legend = , c(method_names, "Target level 0.05"), col = c(cbPalette[c(4, 6, 7)], "#000000", "red"),
lty = c(2, 3, 4, 1, 3), pch = c(0, 8, 10, 19, 19), cex = 1)
mtext(
text = "Rejection Rate Under Null: Gene Expression Data",
side = 3, outer = TRUE, cex = 2, line = -2.5)
rm(list = ls())
## Colorblind friendly palette. Required to use these colors for assignments.
cbPalette <- c("#999999", "#E69F00", "#56B4E9",
"#009E73", "#F0E442", "#0072B2",
"#D55E00", "#CC79A7")
plot(1:8, col = cbPalette, pch = 19)
method_names <- c(
"Cai & Zhang (2016)",
"Zheng et al. (2019) sum",
"Zheng et al. (2019) max",
"Permutation Test")
n_vals <- seq(50, 600, by = 50)
par(cex.main = 1.5, cex.lab = 1)
layout(mat = matrix(c(1, 2), ncol = 2), widths = c(1,0.5))
# table <- read.csv(paste0("42_Results_average.csv"))
table <- read.csv(paste0("42_Results_average_400.csv"))
plot(
x = n_vals, y = table[1, -1],
ylim = c(0,1), xlim = c(0, 600),
main = "",
pch = 0, col = cbPalette[4],
cex.main = 2, cex.lab = 1.5,
xlab = "Total Sample Size (N)",
ylab = "Proportion of Rejection")
lines(
x = n_vals, y = table[1, -1],
lty = 2, col = cbPalette[4])
abline(h = 0.05, col = "red", lty = 3)
points(
x = n_vals, y = rep(0.05, length(n_vals)),
pch =".", col = "red")
points(
x = n_vals, y = table[2, -1],
pch = 8, col = cbPalette[6])
lines(
x = n_vals, y = table[2, -1],
lty = 3, col = cbPalette[6]
)
points(
x = n_vals, y = table[3, -1],
pch = 10, col = cbPalette[7])
lines(
x = n_vals, y = table[3, -1],
lty = 4, col = cbPalette[7]
)
points(
x = n_vals, y = table[4, -1],
pch = 19, col = "#000000")
lines(
x = n_vals, y = table[4, -1],
lty = 1, col = "#000000"
)
plot.new()
legend(
"center", legend = , c(method_names, "Target level 0.05"), col = c(cbPalette[c(4, 6, 7)], "#000000", "red"),
lty = c(2, 3, 4, 1, 3), pch = c(0, 8, 10, 19, 19), cex = 1)
mtext(
text = "Rejection Rate Under Null: Gene Expression Data",
side = 3, outer = TRUE, cex = 2, line = -2.5)
